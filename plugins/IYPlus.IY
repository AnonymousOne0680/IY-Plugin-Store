if writefile and readfile then
    function readsave(key)
    if key ~= nil then
        return game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))[key] or false
    else
        return game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
    end
end
function writesave(key,value)
    if key ~= nil and value ~= nil then
        local save = game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
        save[key] = value
        writefile("IY_FE.iy", game:GetService("HttpService"):JSONEncode(save))
    else notify('Invalid key/value specified to writesave')
    end
end
local t = {}
for i,v in pairs(readsave("PluginsTable")) do
    table.insert(t,v)
    if v:lower() == "IY+.iy" then 
        game:GetService("StarterGui"):SetCore("SendNotification",{["Title"] = "Error",["Text"] = "IY+ is already added!"})
        return
    end
end
local _,err
repeat wait()
_,err = pcall(function()
writefile("IY+.iy",game:HttpGet("http://plugins.x10.bz/plugins/IY+.IY"))
end) until not err
table.insert(t,v)
writesave("PluginsTable",t)
game:GetService('TeleportService'):Teleport(game.PlaceId)
else
game:GetService("StarterGui"):SetCore("SendNotification",{Title = "Error",Text = "Your exploit does not support readfile/writefile"})
end